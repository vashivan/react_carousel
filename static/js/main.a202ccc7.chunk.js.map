{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","startImage","setStartImage","carouselWidth","endImgIndex","translateX","className","style","transition","transform","width","map","imgUrl","src","alt","type","onClick","length","disabled","App","state","this","htmlFor","id","min","value","onChange","e","setState","Number","target","max","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a202ccc7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [startImage, setStartImage] = useState(0);\n\n  const carouselWidth = (frameSize * itemWidth) + ((frameSize - 1) * 10);\n  const endImgIndex = startImage + frameSize;\n  const translateX = startImage === 0\n    ? 0\n    : startImage * (itemWidth + 10);\n\n  const handleNextChange = () => {\n    if (infinite && endImgIndex === images.length) {\n      setStartImage(0);\n    } else {\n      setStartImage(\n        endImgIndex + step < images.length\n          ? startImage + step\n          : images.length - frameSize,\n      );\n    }\n  };\n\n  const handlePrevChange = () => {\n    if (infinite && startImage === 0) {\n      setStartImage(images.length - frameSize);\n    } else {\n      setStartImage(\n        startImage > step\n          ? startImage - step\n          : 0,\n      );\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n    >\n      <div\n        className=\"Carousel__container\"\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `transform ${animationDuration}ms`,\n            transform: `translateX(${-(translateX)}px)`,\n            width: carouselWidth,\n          }}\n        >\n          {images.map((imgUrl) => (\n            <li className=\"Carousel__list__item\" key={imgUrl}>\n              <img\n                className=\"Carousel__list__item__img\"\n                src={imgUrl}\n                alt=\"smile\"\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={handlePrevChange}\n          disabled={!infinite && startImage === 0}\n        >\n          {'<<'}\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={handleNextChange}\n          disabled={!infinite && images.length - frameSize === startImage}\n        >\n          {'>>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const handleWidthChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ itemWidth: Number(e.target.value) });\n    };\n\n    const handleFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ frameSize: Number(e.target.value) });\n    };\n\n    const handleStepChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ step: Number(e.target.value) });\n    };\n\n    const handleAnimationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ animationDuration: Number(e.target.value) });\n    };\n\n    const handleCheckChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ infinite: (e.target.checked) });\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"container\">\n          <div className=\"App__carousel__controler\">\n            <label htmlFor=\"itemId\">Item width:</label>\n            <input\n              className=\"App__carousel__controler__input\"\n              type=\"number\"\n              id=\"itemId\"\n              min={0}\n              step={15}\n              value={itemWidth}\n              onChange={handleWidthChange}\n            />\n          </div>\n\n          <div className=\"App__carousel__controler\">\n            <label htmlFor=\"frameId\">Frame size:</label>\n            <input\n              className=\"App__carousel__controler__input\"\n              type=\"number\"\n              id=\"frameId\"\n              min={1}\n              max={10}\n              value={frameSize}\n              onChange={handleFrameSize}\n            />\n          </div>\n\n          <div className=\"App__carousel__controler\">\n            <label htmlFor=\"stepId\">Step:</label>\n            <input\n              className=\"App__carousel__controler__input\"\n              type=\"number\"\n              id=\"stepId\"\n              min={1}\n              value={step}\n              onChange={handleStepChange}\n            />\n          </div>\n\n          <div className=\"App__carousel__controler\">\n            <label htmlFor=\"animation\">Animation duration:</label>\n            <input\n              className=\"App__carousel__controler__input\"\n              type=\"number\"\n              id=\"animation\"\n              min={1}\n              value={animationDuration}\n              onChange={handleAnimationChange}\n            />\n          </div>\n\n          <div className=\"App__carousel__controler\">\n            <label htmlFor=\"infinite\">Infinite</label>\n            <input\n              className=\"App__carousel__controler__input\"\n              type=\"checkbox\"\n              id=\"infinite\"\n              checked={infinite}\n              onChange={handleCheckChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}